---

# cluster-master if not specified
- block: # when条件满足后整体执行的块儿
  - name: download_file | Starting download of file
    debug:
      msg: "{{ download.url }}"
    run_once: "{{ download_run_once }}"

  - name: download_file | Set pathname of cached file
    set_fact:
      file_path_cached: "{{ download_cache_dir }}/{{ download.dest | regex_replace('^\\/', '')   }}"
    tags:
      - facts
 
  - name: downlad_file | Create dest directory on node
    file:
      path: "{{ download.dest | dirname }}" # /tmp/releases
      owner: "{{ download.owner | default(omit) }}"
      mode: 0755
      state: directory
      recurse: yes

  - name: download_file | Create local cache directory
    file:
      path: "{{ file_path_cached | dirname }}" # /tmp/kubespray_cache 
      state: directory
      recurse: yes
    delegate_to: localhost
    delegate_facts: false
    run_once: true
    become: false
    tags:
      - localhost

  # This must always be called, to check if the checksum matches. On no-match the file is re-downloaded.
  - name: download_file | Download item
    get_url:
      url: "{{ download.url }}"
      dest: "{{ file_path_cached if download_localhost else download.dest }}"
      owner: "{{ omit if download_localhost else (download.owner | default(omit)) }}"
      mode: "{{ omit if download_localhost else (download.mode | default(omit)) }}"
      checksum: "{{ 'sha256:' + download.sha256 if download.sha256 or omit }}"
      validate_certs: "{{ download_validate_certs }}"
      url_username: "{{ download.username | default(omit) }}"
      url_password: "{{ download.password | default(omit) }}"
      force_basic_auth: "{{ download.force_basic_auth | default(omit) }}"
    delegate_to: "{{ download_delegate if download_run_once else inventory_hostname }}"
    run_once: "{{ download_run_once }}"
    register: get_url_result
    become: "{{ not download_localhost }}"
    until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
    retries: 4
    delay: "{{ retry_stagger | default(5) }}"

  - name: "download_file | Extract file archives"
    include_tasks: "extract_file.yml"
    when:
      - not download_localhost
  tags:
    - download


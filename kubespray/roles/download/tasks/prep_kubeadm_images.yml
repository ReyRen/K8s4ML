---

# cluster-master if not specified

# 将kubeadm的二进制文件下载到了/tmp/releases下
- name: prep_kubeadm_images | Download kubeadm binary
  include_tasks: "download_file.yml"
  vars:
    download: "{{ download_defaults | combine(downloads.kubeadm) }}"
  when:
    - not skip_downloads | default(false)
    - downloads.kubeadm.enabled

# 这里不会执行，因为download_run_once是false(默认)
- name: prep_kubeadm_images | Sync kubeadm binary to nodes
  include_tasks: "sync_file.yml"
  vars:
    download: "{{ download_defaults | combine(downloads.kubeadm) }}"
  when:
    - not skip_downloads | default(false)
    - downloads.kubeadm.enabled
    - download_run_once
    - group_names | intersect(download.groups) | length
      # group_names表示当前正在执行task的主机位于的组

 # 创建kubeadm-images.yaml文件(目前没有执行, 因为没有这个目录)
- name: prep_kubeadm_images | Create kubeadm config
  template:
    src: "kubeadm-images.yaml.j2"
    dest: "{{ kube_config_dir }}/kubeadm-images.yaml" # /etc/kubernetes/
  when:
    - not skip_kubeadm_images|default(false)


# 将/tmp/releases/kubeadmXXX 到/usr/local/bin/
- name: prep_kubeadm_images | Copy kubeadm binary from download dir to system path
  synchronize:
    src: "{{ local_release_dir }}/kubeadm-{{ kubeadm_version }}-{{ image_arch }}"
    dest: "{{ bin_dir }}/kubeadm"
    compress: no
    perms: yes
    owner: no
    group: no
  delegate_to: "{{ inventory_hostname }}"

- name: prep_kubeadm_images | Set kubeadm binary permissions
  file:
    path: "{{ bin_dir }}/kubeadm"
    mode: "0755"
    state: file
 
# 使用kubeadm-images.yml看看kubeadm需要的images(目前没有执行，因为上面文件没创建)
- name: prep_kubeadm_images | Generate list of required images
  command: "{{ bin_dir }}/kubeadm config images list --config={{ kube_config_dir }}/kubeadm-images.yaml"
  register: kubeadm_images_raw
  run_once: true
  changed_when: false
  when:
    - not skip_kubeadm_images|default(false) 

# 目前没有执行
- name: prep_kubeadm_images | Parse list of images
  vars:
    kubeadm_images_list: "{{ kubeadm_images_raw.stdout_lines }}"
  set_fact:
    kubeadm_image:
      key: "kubeadm_{{ (item | regex_replace('^(?:.*\\/)*','')).split(':')[0] }}"
      value:
        enabled: true
        container: true
        repo: "{{ item | regex_replace('^(.*):.*$','\\1') }}"
        tag: "{{ item | regex_replace('^.*:(.*)$','\\1') }}"
        groups: k8s-cluster
  loop: "{{ kubeadm_images_list | flatten(levels=1) }}"
  register: kubeadm_images_cooked
  run_once: true
  when:
    - not skip_kubeadm_images|default(false)


# 目前没有执行
- name: prep_kubeadm_images | Convert list of images to dict for later use
  set_fact:
    kubeadm_images: "{{ kubeadm_images_cooked.results | map(attribute='ansible_facts.kubeadm_image') | list | items2dict }}"
  run_once: true
  when:
    - not skip_kubeadm_images | default(false)

